{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport default function getImagesByQuery(query) {\n  const url = 'https://vercel-api-proxy-six-fawn.vercel.app/api/proxy';\n  return axios\n    .get(url, {\n      params: {\n        source: 'pixabay',\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    })\n    .then(response => response.data)\n    .catch(error => {\n      console.error('Error while fetching images:', error);\n      return null;\n    });\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst loader = document.querySelector('.loader');\nconst gallery = document.querySelector('.gallery');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n  captionPosition: 'bottom',\n});\n\nexport function createGallery(images) {\n  const imagesArr = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `<li class=\"gallery-item\">\n              <a class=\"gallery-link\" href=${largeImageURL}>\n                <img src=${webformatURL} alt=\"${tags}\" width=\"360\" height=\"200\"/>\n                <div class=\"markup-image\">\n                  <ul>\n                    <li class=\"markup-image-text\">likes</li>\n                    <li class=\"markup-image-value\">${likes}</li>      \n                  </ul>\n                  <ul>\n                    <li class=\"markup-image-text\">views</li>\n                    <li class=\"markup-image-value\">${views}</li>      \n                  </ul>\n                  <ul>\n                    <li class=\"markup-image-text\">comments</li>\n                    <li class=\"markup-image-value\">${comments}</li>      \n                  </ul>\n                  <ul>\n                    <li class=\"markup-image-text\">downloads</li>\n                    <li class=\"markup-image-value\">${downloads}</li>      \n                  </ul>\n                </div>\n              </a>\n            </li>`\n    )\n    .join('');\n\n  gallery.innerHTML = imagesArr;\n  lightbox.refresh();\n}\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\nexport function showLoader() {\n  loader.classList.add('visible');\n}\n\nexport function hideLoader() {\n  loader.classList.remove('visible');\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport getImagesByQuery from './js/pixabay-api.js';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions.js';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', async function (event) {\n  event.preventDefault();\n\n  const inputValue = event.target.elements['search-text'].value.trim();\n\n  if (inputValue === '') {\n    iziToast.show({\n      message: 'Form field must be filled in!',\n      titleColor: 'red',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  showLoader();\n  clearGallery();\n\n  try {\n    const response = await getImagesByQuery(inputValue);\n    const images = response.hits || [];\n\n    if (images.length > 0) {\n      createGallery(images);\n    } else {\n      iziToast.show({\n        message: 'Try another way',\n        titleColor: 'red',\n        position: 'topRight',\n      });\n    }\n  } catch (error) {\n    iziToast.show({\n      message:\n        'Something went wrong. Please check your connection or try again later.',\n      titleColor: 'red',\n      position: 'topRight',\n    });\n    console.error('Fetch error:', error);\n  } finally {\n    hideLoader();\n    form.reset();\n  }\n});\n"],"names":["getImagesByQuery","query","axios","response","error","loader","gallery","lightbox","SimpleLightbox","createGallery","images","imagesArr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","form","event","inputValue","iziToast"],"mappings":"owBAEe,SAASA,EAAiBC,EAAO,CAE9C,OAAOC,EACJ,IAFS,yDAEA,CACR,OAAQ,CACN,OAAQ,UACR,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,EACA,KAAKE,GAAYA,EAAS,IAAI,EAC9B,MAAMC,IACL,QAAQ,MAAM,+BAAgCA,CAAK,EAC5C,KACR,CACL,CChBA,MAAMC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,IACd,gBAAiB,QACnB,CAAC,EAEM,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAYD,EACf,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA,6CACiCL,CAAa;AAAA,2BAC/BD,CAAY,SAASE,CAAI;AAAA;AAAA;AAAA;AAAA,qDAICC,CAAK;AAAA;AAAA;AAAA;AAAA,qDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,qDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,qDAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,kBAKzD,EACA,KAAK,EAAE,EAEVZ,EAAQ,UAAYK,EACpBJ,EAAS,QAAO,CAClB,CAEO,SAASY,GAAe,CAC7Bb,EAAQ,UAAY,EACtB,CAEO,SAASc,GAAa,CAC3Bf,EAAO,UAAU,IAAI,SAAS,CAChC,CAEO,SAASgB,GAAa,CAC3BhB,EAAO,UAAU,OAAO,SAAS,CACnC,CCpDA,MAAMiB,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,eAAgBC,EAAO,CACrDA,EAAM,eAAc,EAEpB,MAAMC,EAAaD,EAAM,OAAO,SAAS,aAAa,EAAE,MAAM,OAE9D,GAAIC,IAAe,GAAI,CACrBC,EAAS,KAAK,CACZ,QAAS,gCACT,WAAY,MACZ,SAAU,UAChB,CAAK,EACD,MACD,CAEDL,IACAD,IAEA,GAAI,CAEF,MAAMT,GADW,MAAMV,EAAiBwB,CAAU,GAC1B,MAAQ,GAE5Bd,EAAO,OAAS,EAClBD,EAAcC,CAAM,EAEpBe,EAAS,KAAK,CACZ,QAAS,kBACT,WAAY,MACZ,SAAU,UAClB,CAAO,CAEJ,OAAQrB,EAAO,CACdqB,EAAS,KAAK,CACZ,QACE,yEACF,WAAY,MACZ,SAAU,UAChB,CAAK,EACD,QAAQ,MAAM,eAAgBrB,CAAK,CACvC,QAAY,CACRiB,IACAC,EAAK,MAAK,CACX,CACH,CAAC"}